## List all projects separately. Mandatory fields for every project
## are type, url and ref. If your project contains more than one spec
## file you need to define also which spec file should be used.

## Example of rpm package/software called Project-name

## Define project name. This is used to name git clones
## and does not affect the rpm content
#[helloworld]

## Define git url. Make sure you have all read access to the repository.
## You can use url formats which are compatible with normal git command.
#url = git@gitlab:project/helloworld.git

## Define type as project.
#type = project

## ref should be a git tag, branch or hash from where you would like to
## get your source and spec files
#ref = master

## IF you have more than one spec file, specify which spec file should
## be used. This is optional
#spec = helloworld.spec

## IF you want to enable/disable entry from building, define enabled
## variable as 0/false/off or 1/true/on. This is optional
#enabled = 1

## Mock settings define the compilation environment. Easiest way to get a working mock settings
## is to fork/branch the below repository if the default settings do not work for you.
## Multiple roots can be separated with comma.

[mock]
url = git@gitlab:project/mocksettings.git
ref = master
roots = epel-7-x86_64

## sshbackup defines a remote host where build is stored when done.
## This backup also restores workspace if disk is cleaned
[sshbackup]
remotehost = localhost.example.com
remotedir = /var/www/html/mybuild
